#!/usr/bin/env bash

#
# Copyright 2016 Apigee Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node_vcap='(() => {
var vcap = require("./vcap");
var cred = vcap.services.findCredentialsWithKeys("org", "env", "key", "secret")[0];
return cred ? `-o ${cred.org} -e ${cred.env} -k ${cred.key} -s ${cred.secret}` : "";
})()'

regex="([^\/]+)-([^-]+)-cache-config.yaml"
node_yaml='(() => {
var yaml = require("js-yaml");
var fs   = require("fs");
var doc  = yaml.safeLoad(fs.readFileSync(process.argv[1], "utf8"));
return `-k ${doc.analytics.key} -s ${doc.analytics.secret}`;
})()'

oeks=$(node -p "$node_vcap")
if [[ -n "$oeks" ]]; then
    echo "Credentials found in VCAP_SERVICES"
else

    for file in ~/.edgemicro/*; do
        if [[ $file =~ $regex ]]; then
            org=${BASH_REMATCH[1]}
            env=${BASH_REMATCH[2]}
            key_secret=$(node -p "$node_yaml" "$file")
            if [[ $? -eq 0 ]]; then
                oeks="-o $org -e $env $key_secret"
                break
            else
                echo "ERROR: cannot read key/secret from $file"
                exit 1
            fi
        fi
    done

fi

if [[ -z "$oeks" ]]; then
    echo "ERROR: {org}-{env}-cache-config.yaml not found in ~/.edgemicro"
    exit 1
fi

if [[ -z "$PORT" ]]; then
    port=""
else
    port="--port $PORT"
fi

NODE_TLS_REJECT_UNAUTHORIZED=0 ./cli/edgemicro start $oeks $port "$@"
